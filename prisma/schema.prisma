// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id           String    @id @unique
  created      DateTime  @default(now())
  updated      DateTime  @default(now())
  name         String
  email        String
  role         String     @default("Standard")
  is_banned    Boolean    @default(false)
  auth_session Session[]
  key          Key[]
  prompts      Prompt[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Prompt {
  id                  String      @id @default(uuid())
  user_id             String    
  name                String    
  dob                 String?   
  description         String?     
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @default(now())
  user                User        @relation(fields: [user_id], references: [id])
  responses           Response[]
}

model Response {
  id                String      @id @default(uuid())
  prompt_id         String
  // Todo api response shit

  prompt              Prompt        @relation(fields: [prompt_id], references: [id])
}